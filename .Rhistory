final_resto_names
View(address)
View(address)
View(address)
View(address)
View(address)
data_frame_data = data.frame(final_resto_names, final_address, final_phone, final_costs)
data_frame_data
View(data_frame_data)
View(data_frame_data)
library(rvest)
url = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
webpage = read_html(url)
restaurant_names = html_nodes(webpage, '#super-container .js-analytics-clicks span')
resto_names_txt = html_text(restaurant_names)
final_resto_names = resto_names_txt[2:11]
final_resto_names
restaurant_names
library(rvest)
url = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
webpage = read_html(url)
restaurant_names = html_nodes(webpage, '#super-container .js-analytics-click span')
resto_names_txt = html_text(restaurant_names)
resto_names_txt
library(rvest)
url = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
webpage = read_html(url)
restaurant_names = html_nodes(webpage, '#super-container .js-analytics-clicks span')
resto_names_txt = html_text(restaurant_names)
final_resto_names = resto_names_txt[2:11]
final_resto_names
resto_names_txt
resto_names2_txt
final_resto_names = resto_names2_txt[2:11]
final_resto_names
resto_names_txt
restaurant_names
restaurant_names
webpage
library(rvest)
url = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
webpage = read_html(url)
resto_names = html_nodes(webpage, '#super-container .js-analytics-clicks span')
resto_names_txt = html_text(resto_names)
final_resto_names = resto_names_txt[2:11]
# final_resto_names
final_resto_names
address = html_nodes(webpage, 'address')
address_clean = html_text(address)
address_clean = gsub("\n","", address_clean)
address_clean_trimmed = trimws(address_clean)
final_address = address_clean_trimmed[2:11]
final_address
resto_names = html_nodes(webpage, '#super-container .js-analytics-clicks span')
resto_names
resto_names_raw = html_nodes(webpage, '#super-container .js-analytics-clicks span')
resto_names_raw
address
resto_names_raw = html_nodes(webpage, '#super-container .js-analytics-clicks span')
resto_names_txt = html_text(resto_names_raw)
final_resto_names = resto_names_txt[2:11]
final_resto_names
final_resto_names
resto_names2_txt
final_resto_names_1 = resto_names2_txt[2:11]
View(data_frame_data)
View(data_frame_data)
data_frame_data = data.frame(final_resto_names_1,final_address, final_phone,final_costs)
View(data_frame_data)
resto_names_raw = html_nodes(webpage, '#super-container .js-analytics-clicks span')
resto_names2_txt = html_text(resto_names_raw)
final_resto_names_1 = resto_names_txt[2:11]
final_resto_names_1
resto_names_data = html_nodes(webpage, '#super-container .js-analytics-clicks span')
resto_names_data
# install.packages("rvest")
library(rvest)
url = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
webpage = read_html(url)
resto_names_data = html_nodes(webpage, '#super-container .js-analytics-clicks span')
resto_names_clean_txt = html_text(resto_names_data)
final_resto_names_clean = resto_names_txt[2:11]
# final_resto_names_clean
address = html_nodes(webpage, 'address')
address_clean = html_text(address)
address_clean = gsub("\n","", address_clean)
address_clean_trimmed = trimws(address_clean)
final_address = address_clean_trimmed[2:11]
# final_address
phone = html_nodes(webpage, '.biz-phone')
phone_clean = html_text(phone)
phone_clean = gsub("\n","", phone_clean)
phone_clean_trimmed = trimws(phone_clean)
final_phone = phone_clean_trimmed[2:11]
# final_phone
costs = html_nodes(webpage, '.price-range')
costs_clean = html_text(costs)
costs_clean_trimmed = trimws(costs_clean)
final_costs = costs_clean_trimmed
# final_costs
data_frame_data = data.frame(final_resto_names_clean, final_address, final_phone, final_costs)
data_frame_data
install.packages("rvest")
library(rvest)
url = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
webpage = read_html(url)
resto_names_data = html_nodes(webpage, '#super-container .js-analytics-clicks span')
resto_names_clean_txt = html_text(resto_names_data)
final_resto_names_clean = resto_names_clean_txt[2:11]
# final_resto_names_clean
address = html_nodes(webpage, 'address')
address_clean = html_text(address)
address_clean = gsub("\n","", address_clean)
address_clean_trimmed = trimws(address_clean)
final_address = address_clean_trimmed[2:11]
# final_address
phone = html_nodes(webpage, '.biz-phone')
phone_clean = html_text(phone)
phone_clean = gsub("\n","", phone_clean)
phone_clean_trimmed = trimws(phone_clean)
final_phone = phone_clean_trimmed[2:11]
# final_phone
costs = html_nodes(webpage, '.price-range')
costs_clean = html_text(costs)
costs_clean_trimmed = trimws(costs_clean)
final_costs = costs_clean_trimmed
# final_costs
data_frame_data = data.frame(final_resto_names_clean, final_address, final_phone, final_costs)
data_frame_data
# install.packages("rvest")
library(rvest)
url = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
webpage = read_html(url)
resto_names_data = html_nodes(webpage, '#super-container .js-analytics-clicks span')
resto_names_clean_txt = html_text(resto_names_data)
final_resto_names_clean = resto_names_clean_txt[2:11]
# final_resto_names_clean
address = html_nodes(webpage, 'address')
address_clean = html_text(address)
address_clean = gsub("\n","", address_clean)
address_clean_trimmed = trimws(address_clean)
final_address = address_clean_trimmed[2:11]
# final_address
phone = html_nodes(webpage, '.biz-phone')
phone_clean = html_text(phone)
phone_clean = gsub("\n","", phone_clean)
phone_clean_trimmed = trimws(phone_clean)
final_phone = phone_clean_trimmed[2:11]
# final_phone
costs = html_nodes(webpage, '.price-range')
costs_clean = html_text(costs)
costs_clean_trimmed = trimws(costs_clean)
final_costs = costs_clean_trimmed
# final_costs
data_frame_data = data.frame(final_resto_names_clean, final_address, final_phone, final_costs)
data_frame_data
restos_cheap = dplyr::filter(data_frame_data, final_costs == "$$")
restos_cheap
View(restos_cheap)
url = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
webpage = read_html(url)
restos_html = webpage
resto_names_data = html_nodes(restos_html, '#super-container .js-analytics-clicks span')
resto_names_clean_txt = html_text(resto_names_data)
final_resto_names_clean = resto_names_clean_txt[2:11]
final_resto_names_clean
install.packages("rvest")
library(rvest)
url = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
webpage = read_html(url)
restos_html = webpage
resto_names_data = html_nodes(restos_html, '#super-container .js-analytics-clicks span')
resto_names_clean_txt = html_text(resto_names_data)
final_resto_names_clean = resto_names_clean_txt[2:11]
final_resto_names_clean
install.packages("rvest")
library(rvest)
url = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
webpage = read_html(url)
restos_html = webpage
resto_names_data = html_nodes(restos_html, '#super-container .js-analytics-clicks span')
resto_names_clean_txt = html_text(resto_names_data)
final_resto_names_clean = resto_names_clean_txt[2:11]
final_resto_names_clean
final_address
url
webpage
resto_names_data
resto_nodes = html_nodes(webpage, "#super-container .js-analytics-clicks span")
resto_nodes
View(restos_html)
View(restos_html)
View(restos_html)
View(restos_cheap)
View(resto_nodes)
View(resto_nodes)
View(data_frame_data)
View(restos_cheap)
resto_names2_txt
nick = html_nodes(webpage, "#super-container .js-analytics-clicks span")
nick
yelp_names_html = html_nodes(webpage, "#super-container .js-analytics-clicks span")
yelp_names_text = html_text(yelp_names_html)
yelp_names_text
yelp_link = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
yelp_names_html = read_html(yelp_link)
yelp_names_html = html_nodes(yelp_names_html, "#super-container .js-analytics-click span")
yelp_names_text = html_text(yelp_names_html)
yelp_names_text
yelp_names_final = yelp_names_text[2:11]
yelp_names_final
data_frame_data = data.frame(yelp_names_final)
#install.packages("rvest")
library(rvest)
yelp_link = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
yelp_names_html = read_html(yelp_link)
yelp_names_html = html_nodes(yelp_names_html, "#super-container .js-analytics-click span")
yelp_names_text = html_text(yelp_names_html)
yelp_names_final = yelp_names_text[2:11]
address = html_nodes(webpage, 'address')
address_clean = html_text(address)
address_clean = gsub("\n","", address_clean)
address_clean_trimmed = trimws(address_clean)
final_address = address_clean_trimmed[2:11]
phone = html_nodes(webpage, '.biz-phone')
phone_clean = html_text(phone)
phone_clean = gsub("\n","", phone_clean)
phone_clean_trimmed = trimws(phone_clean)
final_phone = phone_clean_trimmed[2:11]
costs = html_nodes(webpage, '.price-range')
costs_clean = html_text(costs)
costs_clean_trimmed = trimws(costs_clean)
final_costs = costs_clean_trimmed
data_frame_data = data.frame(yelp_names_final, final_address, final_phone, final_costs)
restos_cheap = dplyr::filter(data_frame_data, final_costs == "$$")
View(restos_cheap)
View(data_frame_data)
View(restos_cheap)
library(rvest)
url = ""
webpage = read_html(url)
url="https://weather.gc.ca/city/pages/qc-147_metric_e.html"
webpage = read_html(url)
temp_nodes = html_nodes(".div-column:nth-child(6) .div-row2 .center-block+ .mrgn-bttm-0 , .div-column:nth-child(5) .div-row2 .center-block+ .mrgn-bttm-0 , .div-column:nth-child(4) .div-row2 .center-block+ .mrgn-bttm-0 , .div-column:nth-child(3) .div-row2 .center-block+ .mrgn-bttm-0 , .div-column:nth-child(2) .div-row2 .center-block+ .mrgn-bttm-0")
temp_nodes = html_nodes(webpage, ".div-column:nth-child(6) .div-row2 .center-block+ .mrgn-bttm-0 , .div-column:nth-child(5) .div-row2 .center-block+ .mrgn-bttm-0 , .div-column:nth-child(4) .div-row2 .center-block+ .mrgn-bttm-0 , .div-column:nth-child(3) .div-row2 .center-block+ .mrgn-bttm-0 , .div-column:nth-child(2) .div-row2 .center-block+ .mrgn-bttm-0")
temp_nodes
temp_nodes_day = temp_nodes
temp_nodes_night = html_nodes(webpage, ".div-column+ .div-column .low")
temp_nodes_night
temp_nodes_day
temp_nodes_day = html_nodes(webpage, ".div-column:nth-child(3) .high , .div-column:nth-child(4) .high , .div-column:nth-child(5) .high , .div-column:nth-child(6) .high , .div-column:nth-child(2) .high")
temp_day_txt = html_text(temp_nodes_day)
temp_day_txt
temp_nodes_day = html_nodes(webpage, ".high")
temp_nodes_night = html_nodes(webpage, ".low")
temp_day_txt = html_text(temp_nodes_day)
temp_night_txt = html_text(temp_nodes_night)
View(data_frame_data)
temp_day_txt = temp_day_txt[1:5]
temp_night_txt = temp_night_txt[1:5]
temp_day_txt
temp_night_txt
night_nodes = html_nodes(webpage, ".low")
day_nodes = html_nodes(webpage, ".high")
night_text = html_text(night_nodes)
day_text = html_text(day_nodes)
day_text
day_text_clean = day_text[c(1,3,5,7,9)]
day_text_clean
day_text_clean = gsub("<U+00B0>", "", day_text_clean)
day_text_clean
day_text_clean = gsub("<U+00B0>", " ", day_text_clean)
day_text_clean
day_text_clean = gsub("\n", "", day_text_clean)
day_text_clean
day_text_clean = gsub("<U+00B0>", "", day_text_clean)
day_text_clean
day_text_clean = gsub("<U+00B0>", "", day_text_clean)
day_text_clean
night_text
night_text_clean = night_text[c(3,5,7,9,11)]
night_text_clean = gsub("\n","",night_text_clean)
night_text_clean
night_text_clean
day_text_clean
day_text_clean = gsub("<U+00B0>", "", day_text_clean)
day_text_clean
day_text_clean = gsub("<U+00B0>C", "", day_text_clean)
day_text_clean
day_text_clean = gsub(".<U+00B0>", "", day_text_clean)
day_text_clean
library(rvest)
url="https://weather.gc.ca/city/pages/qc-147_metric_e.html"
webpage = read_html(url)
day_nodes = html_nodes(webpage, ".high")
night_nodes = html_nodes(webpage, ".low")
day_text = html_text(day_nodes)
night_text = html_text(night_nodes)
day_text_clean = day_text[c(1,3,5,7,9)]
night_text_clean = night_text[c(3,5,7,9,11)]
day_text_clean = gsub("\n", "", day_text_clean)
night_text_clean = gsub("\n", "", night_text_clean)
night_text_clean
night_nodes = html_nodes(webpage, ".low")
day_nodes = html_nodes(webpage, ".high")
nick_test = html_text(day_nodes)
nick_test
library(rvest)
url ="https://weather.gc.ca/city/pages/qc-147_metric_e.html"
webpage = read_html(url)
day_temp_html = html_nodes(webpage, ".high")
day_temp_text = html_text(day_temp_html)
day_temp_text
install.packages(rvest)
install.packages("rvest")
install.packages("rvest")
library(rvest)
url ="https://weather.gc.ca/city/pages/qc-147_metric_e.html"
webpage = read_html(url)
day_temp_html = html_nodes(webpage, ".high")
day_temp_text = html_text(day_temp_html)
day_temp_text
day_temp_text_clean = gsub("\\<U+00B0\\>","",day_temp_text)
day_temp_text_clean
day_temp_text_clean = gsub("\n","",day_temp_text)
day_temp_text_clean
day_temp_text_clean = str_replace_all(day_temp_text,"[^[:alnum:]]","")
install.packages("stringr")
install.packages("stringr")
library(stringr)
day_temp_text_clean = str_replace_all(day_temp_text,"[[:punct:]]","")
day_temp_text_clean
day_temp_text_clean = str_replace_all("[[:punct:]]","", day_temp_text)
library(rvest)
yelp_link = "https://www.yelp.ca/search?find_desc=Restaurants&find_loc=Montreal%2C+QC&ns=1"
yelp_names_html = read_html(yelp_link)
yelp_names_html = html_nodes(yelp_names_html, "#super-container .js-analytics-click span")
yelp_names_text = html_text(yelp_names_html)
yelp_names_final = yelp_names_text[2:11]
address = html_nodes(webpage, 'address')
address_clean = html_text(address)
address_clean = gsub("\n","", address_clean)
address_clean_trimmed = trimws(address_clean)
final_address = address_clean_trimmed[2:11]
final_address
phone = html_nodes(webpage, '.biz-phone')
phone_clean = html_text(phone)
phone_clean = gsub("\n","", phone_clean)
phone_clean_trimmed = trimws(phone_clean)
final_phone = phone_clean_trimmed[2:11]
final_phone
costs = html_nodes(webpage, '.price-range')
costs_clean = html_text(costs)
costs_clean_trimmed = trimws(costs_clean)
final_costs = costs_clean_trimmed
final_costs
data_frame_data = data.frame(yelp_names_final, final_address, final_phone, final_costs)
restos_cheap = dplyr::filter(data_frame_data, final_costs == "$$")
View(restos_cheap)
colnames(yelp_names_final) <- c("Restaurant Name","Address","Phone Number","Price Range")
yelp_names_final
colnames(data_frame_data) = ("Restaurant Name", "Address", "Contact", "Costs")
colnames(data_frame_data) = c("Restaurant Name", "Address", "Contact", "Costs")
View(data_frame_data)
restos_cheap
restos_cheap = dplyr::filter(data_frame_data, final_costs == "$$")
View(restos_cheap)
url = "https://weather.gc.ca/city/pages/qc-147_metric_e.html"
webpage=read_html(url)
library(rvest)
library(dplyr)
url = "https://weather.gc.ca/city/pages/qc-147_metric_e.html"
webpage = read_html(url)
day_nodes = html_nodes(webpage, ".high")
day_text = html_text(day_nodes)
day_text
head(day_text)
day_text
day_text = day_text[c(1,3,5,7,9)]
day_text
day_text_clean = gsub("\n", "", day_text)
day_text
day_text_clean
day_text_clean = trimws(day_text_clean)
day_text_clean
night_nodes = html_nodes(webpage, ".low")
night_text = html_text(night_nodes)
night_text = night_text[c(3,5,7,9,11)]
night_text_clean = gsub("\n", "", night_text)
night_text_clean = trimws(night_text_clean)
night_text_clean
date_nodes
date_nodes = html_nodes(webpage, '.div-row1')
date_text = html_text(date_nodes)
date_text
date_text = date_text[2:6]
date_text
date_text_clean = gsub("\n              Fri\n              ", "", date_text)
date_text_clean
date_text_clean = gsub("\n              Fri\n              ", "", date_text)
date_text_clean = gsub("\n              Fri\n              ", "", date_text)
date_text_clean = gsub("\n              Sat\n              ", "", date_text)
date_text_clean = gsub("\n              Sun\n              ", "", date_text)
date_text_clean = gsub("\n              Mon\n              ", "", date_text)
date_text_clean = gsub("\n              Tue\n              ", "", date_text)
date_text_clean = trimws(date_text_clean)
date_text_clean
date_text
data_text_clean = gsub("\n              Fri\n              ","", date_text)
data_text_clean = gsub("\n              Fri\n              ","", date_text_clean)
data_text_clean = gsub("\n              Sat\n              ","", date_text_clean)
date_text_clean
date_text
data_text_clean = gsub("\n              Fri\n              ","", date_text)
date_text_clea
date_text_clean
date_text
date_text_clean = gsub("\n              Fri\n              ","", date_text)
date_text_clean = gsub("\n              Sat\n              ","", date_text_clean)
date_text_clean
date_text_clean = gsub("\n              Sun\n              ","", date_text_clean)
date_text_clean = gsub("\n              Mon\n              ","", date_text_clean)
date_text_clean = gsub("\n              Tue\n              ","", date_text_clean)
date_text_clean
date_text_clean = trimws(date_text_clean)
date_text_clean
night_text_clean
library(rvest)
url = "https://weather.gc.ca/city/pages/qc-147_metric_e.html"
webpage = html_read(url)
webpage = read_html(url)
nodes_daytemp = html_nodes(webpage, ".high")
text_daytemp = html_text(nodes_daytemp)
text_daytemp
nodes_daytemp = html_nodes(webpage, ".div-row2 .center-block+ .mrgn-bttm-0")
text_daytemp = html_nodes(nodes_daytemp)
text_daytemp = html_text(nodes_daytemp)
text_daytemp
gsub("<.*>", "", text_daytemp)
text_daytemp = gsub("<.*>", "", text_daytemp)
text_daytemp
text_daytemp = gsub(".*>", "", text_daytemp)
text_daytemp
test = gsub(".*>", "", text_daytemp)
test
test = gsub("\n", "", text_daytemp)
test
test = gsub("\\<.*\\>", "" ,test)
test
text_daytemp = gsub("\\<.*\\>", "" ,text_daytemp)
text_daytemp
text_daytemp
text_day = html_text(nodes_daytemp)
text_day
text_day = gsub("\\<","",text_day)
text_day
text_day = gsub("\\<U+00B0\\>","",text_day)
text_day
install.packages(arules)
"install.packages("arules"")
"install.packages("arules")
install.packages("arules")
getwd()
setwd("/Users/vasu/Desktop/R-stuff/")
cosmetics_data = read.csv("Cosmetics.csv")
View(cosmetics_data)
cosmetics_data[0] <- NULL
View(cosmetics_data)
delete_col = c('Trans.')
delete_col = c(0)
cosmetics_data %>% select(-one_of('Trans.'))
install.packages("dplyr")
library(dplyr)
library(arules)
cosmetics_data %>% select(-one_of('Trans.'))
cosmetics_data = cosmetics_data %>% select(-one_of('Trans.'))
as(as.matrix(cosmetics_data), 'transactions')
transactiona
transactions
as(as.matrix(cosmetics_data), "transactions")
new _df = as(as.matrix(cosmetics_data), 'transactions')
new =_df = as(as.matrix(cosmetics_data), 'transactions')
new_df = as(as.matrix(cosmetics_data), 'transactions')
View(new_df)
rules = apriori(new_df, parameter = list(supp = 0.2, conf = 0.5, target = "rules"))
View(rules)
inspect(rules)
plot(rules, method = "graph")
install.packages("arulesViz")
plot(rules, method = "graph")
library(arulesViz)
plot(rules, method = "graph")
mascara = subset(rules, subset = lhs %in% "Mascara")
View(mascara)
inspect(mascara)
plot(mascara, method = "graph")
concealer = subset(rules, subset = lhs %in% "Concealer")
plot(concealer, method = "graph")
inspect(concealer)
concealer_rhs = subset(rules, subset = rhs %in% "Concealer")
plot(concealer_rhs, method = "graph")
inspect(concealer_rhs)
lift2 = subset(rules, subset = lift>2)
inspect(lift2)
plot(lift2, method = "graph")
plot(concealer, method = "graph")
inspect(concealer)
concealer_rhs = subset(rules, subset = rhs %in% "Concealer")
getwd()
fifty_data = read.csv("fiftytransactions.csv")
View(fifty_data)
View(fifty_data)
